const grid = document.querySelectorAll('.row');
const columns = document.querySelectorAll('.col');
let counter = 0;
const patterns = [
  [
    ['x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x'],
    ['x', ' ', ' ', '', ' ', ' ', ' ', ' ', ' ', 'x'],
    ['x', ' ', 'x', 'x', 'x', 'x', 'x', 'x', ' ', 'x'],
    ['x', ' ', 'x', ' ', ' ', ' ', ' ', 'x', ' ', 'x'],
    ['x', ' ', 'x', ' ', 'x', 'x', ' ', 'x', ' ', 'x'],
    ['x', ' ', 'x', ' ', 'x', 'x', ' ', 'x', ' ', 'x'],
    ['x', ' ', 'x', ' ', ' ', ' ', ' ', 'x', ' ', 'x'],
    ['x', ' ', 'x', 'x', 'x', 'x', 'x', 'x', ' ', 'x'],
    ['x', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'x'],
    ['x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x', 'x'],
  ],
  [
    ['x', ' ', ' ', 'x', ' ', ' ', 'x', ' ', ' ', 'x'],
    [' ', 'x', ' ', ' ', ' ', ' ', ' ', ' ', 'x', ' '],
    [' ', ' ', 'x', ' ', ' ', ' ', ' ', 'x', ' ', ' '],
    ['x', ' ', ' ', 'x', ' ', ' ', 'x', ' ', ' ', 'x'],
    [' ', ' ', ' ', ' ', 'x', 'x', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', 'x', 'x', ' ', ' ', ' ', ' '],
    ['x', ' ', ' ', 'x', ' ', ' ', 'x', ' ', ' ', 'x'],
    [' ', ' ', 'x', ' ', ' ', ' ', ' ', 'x', ' ', ' '],
    [' ', 'x', ' ', ' ', ' ', ' ', ' ', ' ', 'x', ' '],
    ['x', ' ', ' ', 'x', ' ', ' ', 'x', ' ', ' ', 'x'],
  ],
  [
    [' ', ' ', 'x', ' ', ' ', ' ', ' ', 'x', ' ', ' '],
    [' ', 'x', ' ', ' ', ' ', ' ', ' ', ' ', 'x', ' '],
    ['x', ' ', ' ', ' ', 'x', 'x', ' ', ' ', ' ', 'x'],
    [' ', ' ', ' ', 'x', ' ', ' ', 'x', ' ', ' ', ' '],
    [' ', ' ', 'x', ' ', ' ', ' ', ' ', 'x', ' ', ' '],
    [' ', ' ', 'x', ' ', ' ', ' ', ' ', 'x', ' ', ' '],
    [' ', ' ', ' ', 'x', ' ', ' ', 'x', ' ', ' ', ' '],
    ['x', ' ', ' ', ' ', 'x', 'x', ' ', ' ', ' ', 'x'],
    [' ', 'x', ' ', ' ', ' ', ' ', ' ', ' ', 'x', ' '],
    [' ', ' ', 'x', ' ', ' ', ' ', ' ', 'x', ' ', ' '],
  ],
  [
    ['x', 'x', ' ', ' ', 'x', 'x', ' ', ' ', 'x', 'x'],
    ['x', 'x', ' ', ' ', 'x', 'x', ' ', ' ', 'x', 'x'],
    [' ', ' ', 'x', 'x', ' ', ' ', 'x', 'x', ' ', ' '],
    [' ', ' ', 'x', 'x', ' ', ' ', 'x', 'x', ' ', ' '],
    ['x', 'x', ' ', ' ', 'x', 'x', ' ', ' ', 'x', 'x'],
    ['x', 'x', ' ', ' ', 'x', 'x', ' ', ' ', 'x', 'x'],
    [' ', ' ', 'x', 'x', ' ', ' ', 'x', 'x', ' ', ' '],
    [' ', ' ', 'x', 'x', ' ', ' ', 'x', 'x', ' ', ' '],
    ['x', 'x', ' ', ' ', 'x', 'x', ' ', ' ', 'x', 'x'],
    ['x', 'x', ' ', ' ', 'x', 'x', ' ', ' ', 'x', 'x'],
  ],
  [
    [' ', ' ', ' ', ' ', 'x', 'x', ' ', ' ', ' ', ' '],
    [' ', 'x', ' ', ' ', ' ', ' ', ' ', ' ', 'x', ' '],
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
    [' ', ' ', ' ', 'x', ' ', ' ', 'x', ' ', ' ', ' '],
    ['x', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'x'],
    ['x', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'x'],
    [' ', ' ', ' ', 'x', ' ', ' ', 'x', ' ', ' ', ' '],
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
    [' ', 'x', ' ', ' ', ' ', ' ', ' ', ' ', 'x', ' '],
    [' ', ' ', ' ', ' ', 'x', 'x', ' ', ' ', ' ', ' '],
  ],
  [
    ['x', 'x', ' ', 'x', 'x', 'x', ' ', 'x', 'x', 'x'],
    [' ', 'x', ' ', 'x', ' ', 'x', ' ', 'x', ' ', 'x'],
    [' ', 'x', ' ', 'x', ' ', 'x', ' ', 'x', ' ', 'x'],
    [' ', 'x', ' ', 'x', ' ', 'x', ' ', 'x', ' ', 'x'],
    [' ', 'x', ' ', 'x', ' ', 'x', ' ', 'x', ' ', 'x'],
    [' ', 'x', ' ', 'x', ' ', 'x', ' ', 'x', ' ', 'x'],
    [' ', 'x', ' ', 'x', ' ', 'x', ' ', 'x', ' ', 'x'],
    [' ', 'x', ' ', 'x', ' ', 'x', ' ', 'x', ' ', 'x'],
    [' ', 'x', ' ', 'x', ' ', 'x', ' ', 'x', ' ', 'x'],
    [' ', 'x', 'x', 'x', ' ', 'x', 'x', 'x', ' ', 'x'],
  ],
  [
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
    [' ', 'x', 'x', 'x', ' ', ' ', 'x', 'x', 'x', ' '],
    [' ', 'x', ' ', 'x', 'x', 'x', 'x', ' ', 'x', ' '],
    [' ', 'x', 'x', 'x', ' ', ' ', 'x', 'x', 'x', ' '],
    [' ', ' ', 'x', ' ', ' ', ' ', ' ', 'x', ' ', ' '],
    [' ', ' ', 'x', ' ', ' ', ' ', ' ', 'x', ' ', ' '],
    [' ', 'x', 'x', 'x', ' ', ' ', 'x', 'x', 'x', ' '],
    [' ', 'x', ' ', 'x', 'x', 'x', 'x', ' ', 'x', ' '],
    [' ', 'x', 'x', 'x', ' ', ' ', 'x', 'x', 'x', ' '],
    [' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' '],
  ],
  [
    ['x', 'x', 'x', ' ', ' ', ' ', ' ', 'x', 'x', 'x'],
    ['x', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'x'],
    ['x', ' ', 'x', 'x', ' ', ' ', 'x', 'x', ' ', 'x'],
    [' ', ' ', 'x', 'x', 'x', 'x', 'x', 'x', ' ', ' '],
    [' ', ' ', ' ', 'x', ' ', ' ', 'x', ' ', ' ', ' '],
    [' ', ' ', ' ', 'x', ' ', ' ', 'x', ' ', ' ', ' '],
    [' ', ' ', 'x', 'x', 'x', 'x', 'x', 'x', ' ', ' '],
    ['x', ' ', 'x', 'x', ' ', ' ', 'x', 'x', ' ', 'x'],
    ['x', ' ', ' ', ' ', ' ', ' ', ' ', ' ', ' ', 'x'],
    ['x', 'x', 'x', ' ', ' ', ' ', ' ', 'x', 'x', 'x'],
  ],

];

// function to generatethe pixel heart shape based on the grid
function patternGenerator(patterns, grid) {
  for (let x = 0; x < patterns[counter].length; x++) {
    for (let y = 0; y < patterns[counter][x].length; y++) {
      const col = grid[x].querySelectorAll('.col');
      if (patterns[counter][x][y] === 'x') {
        col[y].classList.add('color');
      }
    }
  }
}

// add a time interval
setInterval(function () {
  columns.forEach(col => col.classList.remove('color'));
  patternGenerator(patterns, grid);
  counter += 1;
  (counter >= patterns.length) ? counter = 0 : null;
}, 300);
